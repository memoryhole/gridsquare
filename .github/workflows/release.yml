# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  create-release:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build
        env:
          ORG_GRADLE_PROJECT_SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: ./gradlew build

      - name: Get Version
        run: >
          echo "VERSION=$(./gradlew properties -q | sed -n 's/version: \(.*\)/\1/p')" >> "$GITHUB_OUTPUT";
          echo "FILENAME=$(ls build/distributions)" >> "$GITHUB_OUTPUT"
        id: version

      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ steps.version.outputs.VERSION }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: ${{ steps.version.outputs.FILENAME }}
          asset_path: build/distributions/${{ steps.version.outputs.FILENAME }}
          asset_content_type: application/zip
